{"integrations":[{"id":"fis","name":"fis","display_name":"fis","description":"file storage but as external plugin","homepage":"","repository":"https://github.com/PlakarKorp/integration-fs","license":"","tags":[],"api_version":"","latest_version":"v1.0.0","types":{"storage":true,"source":false,"destination":false},"documentation":"This integration is not documented yet.","icon":"","featured":""},{"id":"imap","name":"imap","display_name":"imap","description":"imap backend","homepage":"","repository":"https://github.com/PlakarKorp/integration-imap","license":"","tags":[],"api_version":"","latest_version":"v0.1.0-devel.697fd98","types":{"storage":false,"source":true,"destination":true},"documentation":"# IMAP integration\n\n## Overview\n\nThe **Plakar IMAP integration** enables seamless backup and restoration of IMAP mail folders to and from a [Kloset repository](/posts/2025-04-29/kloset-the-immutable-data-store/).\n\n## Installation\n\nFirst, build the binaries:\n\n```bash\n$ go build -o imapImporter ./plugin/importer\n$ go build -o imapExporter ./plugin/exporter\n```\n\nCreate the ptar plugin:\n\n```bash\n$ plakar pkg create manifest.yaml\n```\n\nThis should produce `imap-vX.Y.Z.ptar` that can be installed with:\n\n```bash\n$ plakar pkg add imap-v0.0.1.ptar\n```\n\n## Configuration\n\nThe configuration parameters are as follow:\n\n- `location`: The URL of the IMAP server in the form imap://\u003chost\u003e:\u003cport\u003e.\n- `username`: Username to login.\n- `password`: Password for login.\n- `tls`:      TlS mode to use.  Possible values are tls (the default), starttls and no-tls.\n- `tls_no_verify`: If set to yes, the client will not verify the server certificate in tls mode.\n\n## Example Usage\n\n```bash\n# configure an IMAP source connector\n$ plakar source add myIMAPsrc imap://imap.mydomain.com:143 username=myuser password=mypassword tls=starttls\n\n# backup the mailbox\n$ plakar backup @myIMAPsrc\n\n# configure an IMAP destination connector\n$ plakar destination add myIMAPdst imap://imap.alsomydomain.com:143 username=alsomyuser password=alsomypassword tls=starttls\n\n# restore the snapshot to the destination\n$ plakar restore -to @myIMAPdst \u003csnapid\u003e\n```\n\n## Questions, Feedback, and Support\n\nFound a bug? [Open an issue on GitHub](https://github.com/PlakarKorp/plakar/issues/new?title=Bug%20report%20on%20Filesystem%20integration\u0026body=Please%20provide%20a%20detailed%20description%20of%20the%20issue.%0A%0A**Plakar%20version**)\n\nJoin our [Discord community](https://discord.gg/uuegtnF2Q5) for real-time help and discussions.\n","icon":"","featured":""},{"id":"notion","name":"notion","display_name":"notion","description":"notion backend","homepage":"","repository":"https://github.com/PlakarKorp/integration-notion","license":"","tags":[],"api_version":"","latest_version":"v0.1.0-devel.87f98e3","types":{"storage":false,"source":true,"destination":true},"documentation":"# üì¶ integration-notion\n\n`integration-notion` is a Plakar plugin that lets you back up your Notion pages or workspace directly into a Plakar repository.\n\n\u003e üîê All content is fetched via the Notion API and saved as structured JSON files, including both data and metadata.\n\n---\n\n## ‚öôÔ∏è Requirements\n\n- [**Plakar**](https://github.com/politaire/plakar) installed with plugin support\n- A valid [**Notion API token**](https://www.notion.com/my-integrations) (`ntn_xxx`)\n- The target Notion pages must be **shared** with the integration you created\n---\n\n## üì¶ Installation\n\nFirst, you need to clone this repository and compile the plugin:\n\n```bash\ngit clone git@github.com:PlakarKorp/integration-notion.git\ncd integration-notion\nmake\n```\n\nThen, you need to build the plugin package. This requires Plakar to be installed and available in your `PATH`.\n\n```bash\nplakar pkg build integration-notion/manifest.yaml\n```\n\nThis command builds the plugin in a .ptar file named `notion-vx.x.x-tag.ptar` (where `x.x.x-tag` is the version number).\nThen, install the plugin:\n\n```bash\nplakar pkg add notion-vx.x.x-tag.ptar\n```\n\nThat‚Äôs it ‚Äî you‚Äôre ready to configure and use it.\n\n---\n\n## üöÄ Usage\n\nTo back up your Notion pages, run:\n\n```bash\nplakar source set mynotion notion:// token=\u003cntn_xxx\u003e\nplakar backup @mynotion\n```\n\nReplace `\u003cntn_xxx\u003e` with your actual Notion API token.\n\n---\n\n## üìÇ Backup Format\n\nBacked-up content is stored as **JSON files**, including:\n- Page content\n- Metadata (title, ID, parent, etc.)\n- Block structure and types\n\n---\n\n## üîÑ Restoration\n\nTo restore your Notion backups, you can use the `restore` command:\nconsidering you have a Plakar repository at `/path/to/repo` and and have a Notion page with the ID `\u003croot_page_id\u003e` where you want to restore the content:\n\n```bash\nplakar source set mynotion notion:// token=\u003cntn_xxx\u003e\nplakar  restore -to @mynotion token=\u003cntn_xxx\u003e rootID=\u003croot_page_id\u003e \u003csnapshot_id\u003e\n```\n\nReplace `\u003cntn_xxx\u003e` with your actual Notion API token.\n\nThis will restore the backed-up Notion pages to the specified directory, maintaining the original structure.\n/!\\ Make sure the `root_page_id` corresponds to a valid Notion page where you have write access. Notion public API does not let you restore directly to a workspace.\n\nRestoring does not handle yet media files (images, videos, etc.) due to api limitations ‚Äî we are currently working on adding support for media restoration.\n\n---\n\n## üõ†Ô∏è Tips\n\n- **Sharing:** Make sure your integration is shared with each Notion page you want to back up.\n\n  ‚Üí Create an [Integration in Notion](https://www.notion.com/my-integrations) and share it with the pages you want to back up.\n\n  ‚Üí See [Notion‚Äôs guide on integrations](https://developers.notion.com/docs/getting-started#step-1-create-an-integration) for how to create and share your token properly.\n- **Security:** Keep your token safe.\n- **Selective backups:** Currently, the plugin pulls all shared pages ‚Äî filtering support may come later.\n\n## üì¨ Feedback\n\nFound a bug? Have a feature request? Open an issue or ping the Plakar team.\n","icon":"https://raw.githubusercontent.com/PlakarKorp/integration-notion/refs/tags/v0.1.0-devel.87f98e3/assets/icon.svg","featured":"https://raw.githubusercontent.com/PlakarKorp/integration-notion/refs/tags/v0.1.0-devel.87f98e3/assets/featured.svg"},{"id":"rclone","name":"rclone","display_name":"rclone","description":"A plugin for Rclone integration with various cloud storage services.","homepage":"","repository":"https://github.com/PlakarKorp/integration-rclone","license":"","tags":[],"api_version":"","latest_version":"v0.1.0-devel.2b2ae2e","types":{"storage":true,"source":true,"destination":true},"documentation":"# üì¶ integration-rclone\n\n`integration-rclone` is a Plakar plugin that allows you to back up and restore your cloud data from various cloud providers supported by Rclone (like Google Drive, Google Photos, OneDrive, iCloud Drive, and more) directly into a Plakar repository.\n\n\u003e üîê All data is handled via Rclone and saved/restored seamlessly with Plakar‚Äôs Kloset immutable data store.\n\n---\n\n## ‚öôÔ∏è Requirements\n\n* [**Plakar**](https://github.com/PlakarKorp/plakar) installed with plugin support\n* [**Rclone**](https://rclone.org/install/) installed on your system\n* A configured **Rclone remote** for your cloud provider (e.g., Google Drive, OneDrive, iCloud Drive)\n* Supported providers currently include: `google drive`, `google photos`, `onedrive`, `opendrive`, `iclouddrive` (excl. iCloud Photos), `dropbox`, and `protondrive`.\n\n---\n\n## üì¶ Installation\n\nClone the plugin repository and build the plugin:\n\n```bash\ngit clone git@github.com:PlakarKorp/integration-rclone.git\ncd integration-rclone\nmake\n```\n\nThen, build the plugin package with Plakar:\n\n```bash\nplakar pkg build integration-rclone/manifest.yaml\n```\n\nInstall the generated plugin package (`rclone-vx.x.x.ptar`):\n\n```bash\nplakar pkg install rclone-vx.x.x.ptar\n```\n\nYou‚Äôre now ready to configure and use the Rclone integration.\n\n---\n\n## üîß Configuration\n\nYou must have a valid Rclone remote configured (`rclone config`) for your cloud provider. The remote config lives in `~/.config/rclone/rclone.conf`.\n\nExample snippet for `rclone.conf`:\n\n```ini\n[myremote]\ntype = onedrive\ntoken = {\"...\"}\ndrive_id = ...\ndrive_type = business\n```\n\nTranslate this config to YAML in your Plakar configuration, adding the `location` field matching your provider:\n\n```yaml\nmyremote:\n  type: onedrive\n  token: '{\"...\"}'\n  drive_id: ...\n  drive_type: business\n  location: 'onedrive://'\n```\n\nSupported `location` values:\n\n* `onedrive://`\n* `opendrive://`\n* `googledrive://`\n* `iclouddrive://`\n* `googlephotos://`\n* `dropbox://`\n* `protondrive://`\n* `koofr://`\n\n*Note:* iCloud Drive support excludes iCloud Photos at this time.\n\n---\n\n## üöÄ Usage\n\nCreate a Plakar repository to back up your data:\n\n```bash\nplakar at @myremote create\n```\n\nOr back up your cloud data into a Kloset repository at `/path/to/backup`:\n\n```bash\nplakar at /path/to/backup create\nplakar at /path/to/backup backup @myremote\n```\n\nRestore data from the Kloset repository back to your cloud provider:\n\n```bash\nplakar at /path/to/backup restore -to @myremote \u003csnapshot_id\u003e [path/to/file]\n```\n\nYou can combine all these commands with multiple cloud providers. For example, to back up from iCloud Drive to Google Drive, with OneDrive as the kloset repository:\n\n```bash\nplakar at @onedrive create\nplakar at @onedrive backup @iclouddrive\nplakar at @onedrive restore -to @googledrive \u003csnapshot_id\u003e\n```\n---\n\n## üìÇ Backup Format\n\nData backed up with Rclone integration includes:\n\n* Files and folders as managed by the cloud provider\n* Metadata required for restoration\n* Support for partial or full restores\n\n*Note:* Media-specific APIs (like iCloud Photos) are not fully supported yet.\n\n---\n\n## üõ†Ô∏è Tips\n\n* Ensure your Rclone remote is correctly configured and authenticated before use.\n* Keep your tokens and credentials secure.\n* Currently, Plakar supports only a subset of Rclone‚Äôs providers. More will be added upon demand.\n\n---\n\n## üì¨ Feedback\n\nEncounter an issue or want a new provider supported? Please:\n\n* [Open an issue on GitHub](https://github.com/PlakarKorp/plakar/issues/new?title=Rclone%20integration%20issue)\n* Join our [Discord community](https://discord.gg/uuegtnF2Q5) to discuss and get real-time help.\n","icon":"https://raw.githubusercontent.com/PlakarKorp/integration-rclone/refs/tags/v0.1.0-devel.2b2ae2e/assets/icon.svg","featured":"https://raw.githubusercontent.com/PlakarKorp/integration-rclone/refs/tags/v0.1.0-devel.2b2ae2e/assets/featured.svg"}]}
