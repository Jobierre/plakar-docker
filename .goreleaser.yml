version: 2

release:
  make_latest: "{{ .Env.MAKE_LATEST_RELEASE }}"

archives:
  - files:
      - src: plakar*.[1-9]
        dst: man
      - src: subcommands/**/*.[1-9]
        dst: man
        strip_parent: true

builds:
  - # ID of the build.
    #
    # Default: Project directory name.
    id: "plakar"

    # Path to main.go file or main package.
    # Notice: when used with `gomod.proxy`, this must be a package.
    #
    # Default: `.`.
    main: .

    # Binary name.
    # Can be a path (e.g. `bin/app`) to wrap the binary in a directory.
    #
    # Default: Project directory name.
    binary: plakar

    # Custom environment variables to be set during the builds.
    # Invalid environment variables will be ignored.
    # For more info refer to: https://pkg.go.dev/cmd/go#hdr-Environment_variables
    #
    # Default: os.Environ() ++ env config section.
    # Templates: allowed.
    env:
      - CGO_ENABLED=0

    # GOOS list to build for.
    # For more info refer to: https://pkg.go.dev/cmd/go#hdr-Environment_variables
    #
    # Default: [ 'darwin', 'linux', 'windows' ].
    goos:
      - darwin
      - linux
      - openbsd
      - freebsd
      - windows

    # GOARCH to build for.
    # For more info refer to: https://pkg.go.dev/cmd/go#hdr-Environment_variables
    #
    # Default: [ '386', 'amd64', 'arm64' ].
    goarch:
      - amd64
      - arm64

    # Set the modified timestamp on the output binary, typically
    # you would do this to ensure a build was reproducible.
    # Pass an empty string to skip modifying the output.
    #
    # Templates: allowed.
    mod_timestamp: "{{ .CommitTimestamp }}"

nfpms:
  - package_name: plakar

    # IDs of the builds which should be archived in this package.
    #
    # Since: v2.8 (use 'builds' in previous versions).
    # Default: empty (include all).
    ids:
      - plakar

    # Your app's vendor.
    vendor: PlakarKorp

    # Your app's homepage.
    #
    # Default: inferred from global metadata.
    homepage: https://plakar.io/

    # Your app's maintainer (probably you).
    #
    # Default: inferred from global metadata.
    maintainer: "Gilles Chehade <gilles@plakar.io>"

    # Your app's description.
    #
    # Default: inferred from global metadata.
    description: "Plakar is a secure backup solution for all your data sources, including filesystems, S3 buckets, Cloud resources, SFTP servers, and more."

    # Your app's license.
    #
    # Default: inferred from global metadata.
    license: ISC

    # Formats to be generated.
    formats:
      - apk
      - deb
      - rpm
      - archlinux

    # Packages your package depends on. (overridable)
    dependencies: []

    # Packages your package recommends installing. (overridable)
    recommends: []

    # Packages your package suggests installing. (overridable)
    suggests: []

    # Packages that conflict with your package. (overridable)
    conflicts: []

    # Packages it replaces. (overridable)
    replaces: []

    # Path that the binaries should be installed.
    #
    # Default: '/usr/bin'.
    bindir: /usr/bin

    # Version Release.
    release: "1"

    # Section.
    section: utilities

    # Priority.
    priority: optional

    # # Changelog YAML file, see: https://github.com/goreleaser/chglog
    # #
    # # You can use goreleaser/chglog to create the changelog for your project,
    # # pass that changelog yaml file to GoReleaser,
    # # and it should in turn setup it accordingly for the given available
    # # formats (deb and rpm at the moment).
    # #
    # # Experimental.
    # changelog: ./foo.yml

    # Date to be used as mtime for the package itself, and its internal files.
    # You may also want to set the mtime on its contents.
    #
    # Since: v2.6.
    # Templates: allowed.
    mtime: "{{ .CommitDate }}"

    contents:
      - src: ./plakar.1
        dst: /usr/share/man/man1/plakar.1
        file_info:
          mode: 0644

      - src: ./plakar-query.7
        dst: /usr/share/man/man7/plakar-query.7
        file_info:
          mode: 0644

      - src: ./subcommands/cat/plakar-cat.1
        dst: /usr/share/man/man1/plakar-cat.1
        file_info:
          mode: 0644

      - src: ./subcommands/ui/plakar-ui.1
        dst: /usr/share/man/man1/plakar-ui.1
        file_info:
          mode: 0644

      - src: ./subcommands/locate/plakar-locate.1
        dst: /usr/share/man/man1/plakar-locate.1
        file_info:
          mode: 0644

      - src: ./subcommands/diag/plakar-diag.1
        dst: /usr/share/man/man1/plakar-diag.1
        file_info:
          mode: 0644

      - src: ./subcommands/archive/plakar-archive.1
        dst: /usr/share/man/man1/plakar-archive.1
        file_info:
          mode: 0644

      - src: ./subcommands/config/plakar-source.1
        dst: /usr/share/man/man1/plakar-source.1
        file_info:
          mode: 0644

      - src: ./subcommands/config/plakar-destination.1
        dst: /usr/share/man/man1/plakar-destination.1
        file_info:
          mode: 0644

      - src: ./subcommands/config/plakar-store.1
        dst: /usr/share/man/man1/plakar-store.1
        file_info:
          mode: 0644

      - src: ./subcommands/config/plakar-policy.1
        dst: /usr/share/man/man1/plakar-policy.1
        file_info:
          mode: 0644

      - src: ./subcommands/digest/plakar-digest.1
        dst: /usr/share/man/man1/plakar-digest.1
        file_info:
          mode: 0644

      - src: ./subcommands/scheduler/plakar-scheduler.1
        dst: /usr/share/man/man1/plakar-scheduler.1
        file_info:
          mode: 0644

      - src: ./subcommands/diff/plakar-diff.1
        dst: /usr/share/man/man1/plakar-diff.1
        file_info:
          mode: 0644

      - src: ./subcommands/server/plakar-server.1
        dst: /usr/share/man/man1/plakar-server.1
        file_info:
          mode: 0644

      - src: ./subcommands/ptar/plakar-ptar.1
        dst: /usr/share/man/man1/plakar-ptar.1
        file_info:
          mode: 0644

      - src: ./subcommands/agent/plakar-agent.1
        dst: /usr/share/man/man1/plakar-agent.1
        file_info:
          mode: 0644

      - src: ./subcommands/dup/plakar-dup.1
        dst: /usr/share/man/man1/plakar-dup.1
        file_info:
          mode: 0644

      - src: ./subcommands/info/plakar-info.1
        dst: /usr/share/man/man1/plakar-info.1
        file_info:
          mode: 0644

      - src: ./subcommands/clone/plakar-clone.1
        dst: /usr/share/man/man1/plakar-clone.1
        file_info:
          mode: 0644

      - src: ./subcommands/version/plakar-version.1
        dst: /usr/share/man/man1/plakar-version.1
        file_info:
          mode: 0644

      - src: ./subcommands/mount/plakar-mount.1
        dst: /usr/share/man/man1/plakar-mount.1
        file_info:
          mode: 0644

      - src: ./subcommands/maintenance/plakar-maintenance.1
        dst: /usr/share/man/man1/plakar-maintenance.1
        file_info:
          mode: 0644

      - src: ./subcommands/prune/plakar-prune.1
        dst: /usr/share/man/man1/plakar-prune.1
        file_info:
          mode: 0644

      - src: ./subcommands/ls/plakar-ls.1
        dst: /usr/share/man/man1/plakar-ls.1
        file_info:
          mode: 0644

      - src: ./subcommands/sync/plakar-sync.1
        dst: /usr/share/man/man1/plakar-sync.1
        file_info:
          mode: 0644

      - src: ./subcommands/service/plakar-service.1
        dst: /usr/share/man/man1/plakar-service.1
        file_info:
          mode: 0644

      - src: ./subcommands/backup/plakar-backup.1
        dst: /usr/share/man/man1/plakar-backup.1
        file_info:
          mode: 0644

      - src: ./subcommands/create/plakar-create.1
        dst: /usr/share/man/man1/plakar-create.1
        file_info:
          mode: 0644

      - src: ./subcommands/restore/plakar-restore.1
        dst: /usr/share/man/man1/plakar-restore.1
        file_info:
          mode: 0644

      - src: ./subcommands/check/plakar-check.1
        dst: /usr/share/man/man1/plakar-check.1
        file_info:
          mode: 0644

      - src: ./subcommands/rm/plakar-rm.1
        dst: /usr/share/man/man1/plakar-rm.1
        file_info:
          mode: 0644

      - src: ./subcommands/login/plakar-logout.1
        dst: /usr/share/man/man1/plakar-logout.1
        file_info:
          mode: 0644

      - src: ./subcommands/login/plakar-login.1
        dst: /usr/share/man/man1/plakar-login.1
        file_info:
          mode: 0644

      - src: ./subcommands/login/plakar-token.1
        dst: /usr/share/man/man1/plakar-token.1
        file_info:
          mode: 0644

      - src: ./subcommands/pkg/plakar-pkg-build.1
        dst: /usr/share/man/man1/plakar-pkg-build.1
        file_info:
          mode: 0644

      - src: ./subcommands/pkg/plakar-pkg-add.1
        dst: /usr/share/man/man1/plakar-pkg-add.1
        file_info:
          mode: 0644

      - src: ./subcommands/pkg/plakar-pkg-rm.1
        dst: /usr/share/man/man1/plakar-pkg-rm.1
        file_info:
          mode: 0644

      - src: ./subcommands/pkg/plakar-pkg-create.1
        dst: /usr/share/man/man1/plakar-pkg-create.1
        file_info:
          mode: 0644

      - src: ./subcommands/pkg/plakar-pkg-show.1
        dst: /usr/share/man/man1/plakar-pkg-show.1
        file_info:
          mode: 0644

      - src: ./subcommands/pkg/plakar-pkg-manifest.yaml.5
        dst: /usr/share/man/man5/plakar-pkg-manifest.yaml.5
        file_info:
          mode: 0644

      - src: ./subcommands/pkg/plakar-pkg-recipe.yaml.5
        dst: /usr/share/man/man5/plakar-pkg-recipe.yaml.5
        file_info:
          mode: 0644

homebrew_casks:
  - # Name of the cask
    #
    # Default: the project name.
    # Templates: allowed.
    name: plakar

    skip_upload: '{{ ne .Env.MAKE_LATEST_RELEASE "true" }}'

    # # Path to the manpage file
    # #
    # # Templates: allowed.
    # manpage: man/myapp.1
    manpages:
      - ./man/plakar-cat.1
      - ./man/plakar-ui.1
      - ./man/plakar-locate.1
      - ./man/plakar-diag.1
      - ./man/plakar-archive.1
      - ./man/plakar-source.1
      - ./man/plakar-destination.1
      - ./man/plakar-store.1
      - ./man/plakar-digest.1
      - ./man/plakar-scheduler.1
      - ./man/plakar-diff.1
      - ./man/plakar-server.1
      - ./man/plakar-ptar.1
      - ./man/plakar-agent.1
      - ./man/plakar-dup.1
      - ./man/plakar-info.1
      - ./man/plakar-clone.1
      - ./man/plakar-version.1
      - ./man/plakar-mount.1
      - ./man/plakar-maintenance.1
      - ./man/plakar-prune.1
      - ./man/plakar-ls.1
      - ./man/plakar-sync.1
      - ./man/plakar-service.1
      - ./man/plakar-backup.1
      - ./man/plakar-create.1
      - ./man/plakar-restore.1
      - ./man/plakar-check.1
      - ./man/plakar-rm.1
      - ./man/plakar-logout.1
      - ./man/plakar-login.1
      - ./man/plakar-token.1
      - ./man/plakar-pkg-build.1
      - ./man/plakar-pkg-add.1
      - ./man/plakar-pkg-rm.1
      - ./man/plakar-pkg-create.1
      - ./man/plakar-pkg-show.1
      - ./man/plakar-policy.1
      - ./man/plakar.1
      - ./man/plakar-query.7
      - ./man/plakar-pkg-manifest.yaml.5
      - ./man/plakar-pkg-recipe.yaml.5

    # # Completions for different shells
    # #
    # # Templates: allowed.
    # completions:
    #   bash: completions/myapp.bash
    #   zsh: completions/myapp.zsh
    #   fish: completions/myapp.fish

    # Caveats for the user of your binary.
    caveats: "Run plakar help to get started."

    # Your app's homepage.
    #
    # Default: inferred from global metadata.
    homepage: "https://plakar.io/"

    # Your app's description.
    #
    # Templates: allowed.
    # Default: inferred from global metadata.
    description: "Plakar is a secure backup solution for all your data sources, including filesystems, S3 buckets, Cloud resources, SFTP servers, and more."

    # Repository to push the generated files to.
    repository:
      # Repository owner.
      #
      # Templates: allowed.
      owner: PlakarKorp

      # Repository name.
      #
      # Templates: allowed.
      name: homebrew-tap

      # Optionally a branch can be provided.
      #
      # Default: default repository branch.
      # Templates: allowed.
      branch: main

      # Optionally a token can be provided, if it differs from the token
      # provided to GoReleaser
      #
      # Templates: allowed.
      token: "{{ .Env.HOMEBREW_TOKEN }}"
