// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyValueMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          map[string]string      `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValueMap) Reset() {
	*x = KeyValueMap{}
	mi := &file_proto_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValueMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueMap) ProtoMessage() {}

func (x *KeyValueMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueMap.ProtoReflect.Descriptor instead.
func (*KeyValueMap) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{0}
}

func (x *KeyValueMap) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	mi := &file_proto_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CLIMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLIMessage) Reset() {
	*x = CLIMessage{}
	mi := &file_proto_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLIMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLIMessage) ProtoMessage() {}

func (x *CLIMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLIMessage.ProtoReflect.Descriptor instead.
func (*CLIMessage) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{2}
}

func (x *CLIMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_proto_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_service_proto protoreflect.FileDescriptor

const file_proto_service_proto_rawDesc = "" +
	"\n" +
	"\x13proto/service.proto\x12\tmyservice\"|\n" +
	"\vKeyValueMap\x124\n" +
	"\x04data\x18\x01 \x03(\v2 .myservice.KeyValueMap.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"#\n" +
	"\rConfigRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\"&\n" +
	"\n" +
	"CLIMessage\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"\"\n" +
	"\bResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\xfc\x01\n" +
	"\tMyService\x127\n" +
	"\bImporter\x12\x16.myservice.KeyValueMap\x1a\x13.myservice.Response\x127\n" +
	"\bExporter\x12\x16.myservice.KeyValueMap\x1a\x13.myservice.Response\x12;\n" +
	"\x06Config\x12\x18.myservice.ConfigRequest\x1a\x15.myservice.CLIMessage0\x01\x12@\n" +
	"\fConfigStream\x12\x15.myservice.CLIMessage\x1a\x15.myservice.CLIMessage(\x010\x01B\x1cZ\x1aplakar-rclone-plugin/protob\x06proto3"

var (
	file_proto_service_proto_rawDescOnce sync.Once
	file_proto_service_proto_rawDescData []byte
)

func file_proto_service_proto_rawDescGZIP() []byte {
	file_proto_service_proto_rawDescOnce.Do(func() {
		file_proto_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_service_proto_rawDesc), len(file_proto_service_proto_rawDesc)))
	})
	return file_proto_service_proto_rawDescData
}

var file_proto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_service_proto_goTypes = []any{
	(*KeyValueMap)(nil),   // 0: myservice.KeyValueMap
	(*ConfigRequest)(nil), // 1: myservice.ConfigRequest
	(*CLIMessage)(nil),    // 2: myservice.CLIMessage
	(*Response)(nil),      // 3: myservice.Response
	nil,                   // 4: myservice.KeyValueMap.DataEntry
}
var file_proto_service_proto_depIdxs = []int32{
	4, // 0: myservice.KeyValueMap.data:type_name -> myservice.KeyValueMap.DataEntry
	0, // 1: myservice.MyService.Importer:input_type -> myservice.KeyValueMap
	0, // 2: myservice.MyService.Exporter:input_type -> myservice.KeyValueMap
	1, // 3: myservice.MyService.Config:input_type -> myservice.ConfigRequest
	2, // 4: myservice.MyService.ConfigStream:input_type -> myservice.CLIMessage
	3, // 5: myservice.MyService.Importer:output_type -> myservice.Response
	3, // 6: myservice.MyService.Exporter:output_type -> myservice.Response
	2, // 7: myservice.MyService.Config:output_type -> myservice.CLIMessage
	2, // 8: myservice.MyService.ConfigStream:output_type -> myservice.CLIMessage
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_service_proto_init() }
func file_proto_service_proto_init() {
	if File_proto_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_service_proto_rawDesc), len(file_proto_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_service_proto_goTypes,
		DependencyIndexes: file_proto_service_proto_depIdxs,
		MessageInfos:      file_proto_service_proto_msgTypes,
	}.Build()
	File_proto_service_proto = out.File
	file_proto_service_proto_goTypes = nil
	file_proto_service_proto_depIdxs = nil
}
